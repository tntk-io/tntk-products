name: Docker Build and Deploy

on:
  push:
    branches:
      - stage
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build-tag-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::954045451317:role/github-actions-ecr
          aws-region: us-west-2
          role-session-name: OIDCSession

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image for prod
        if: github.ref == 'refs/heads/main'
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: tntk-api
          PROD_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$PROD_TAG .
          docker tag $REGISTRY/$REPOSITORY:$PROD_TAG $REGISTRY/$REPOSITORY:latest
          docker push $REGISTRY/$REPOSITORY:$PROD_TAG
          docker push $REGISTRY/$REPOSITORY:latest

      - name: Build, tag, and push docker image for stage
        if: github.ref == 'refs/heads/stage'
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: tntk-api-dev
          STAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$STAGE_TAG .
          docker tag $REGISTRY/$REPOSITORY:$STAGE_TAG $REGISTRY/$REPOSITORY:latest
          docker push $REGISTRY/$REPOSITORY:$STAGE_TAG
          docker push $REGISTRY/$REPOSITORY:latest
  manifest-updates:
    runs-on: ubuntu-latest
    needs: build-tag-push
    steps:
      - name: Checkout Helm chart repository
        uses: actions/checkout@v4
        with:
          repository: "tntk-io/tntk-k8s-manifests"
          token: ${{ secrets.GH_TOKEN }}
      - name: Install yq
        run: |
          # Install yq if your runner doesn't have it
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.9.3/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq
      - name: Update prod manifest using yq
        if: github.ref == 'refs/heads/main'
        env:
          SERVICE_NAME: "tntk-api" # This could be dynamically determined
          PROD_TAG: ${{ github.sha }}
          PROD_YAML_FILE: "environments/values-prod.yaml"
        run: |
          yq eval ".tntkApi.docker.image.tag = \"$PROD_TAG\"" -i $PROD_YAML_FILE
      - name: Update stage manifest using yq
        if: github.ref == 'refs/heads/stage'
        env:
          SERVICE_NAME: "tntk-api" # This could be dynamically determined
          STAGE_TAG: ${{ github.sha }}
          DEV_YAML_FILE: "environments/values-dev.yaml"
        run: |
          yq eval ".tntkApi.docker.image.tag = \"$STAGE_TAG\"" -i $DEV_YAML_FILE
      - name: Push prod manifests to tntk-k8s-manifests
        if: github.ref == 'refs/heads/main'
        env:
          SERVICE_NAME: "tntk-api" # This could be dynamically determined
          PROD_TAG: ${{ github.sha }}
          PROD_YAML_FILE: "environments/values-prod.yaml"
        run: |
          # Setting up Git for commit
          git config --global user.name 'TNTK'
          git config --global user.email 'actions@tntk.io'
          git add $PROD_YAML_FILE
          git commit -m "Update $SERVICE_NAME image tag to $PROD_TAG"
          git push
      - name: Push stage manifests to tntk-k8s-manifests
        if: github.ref == 'refs/heads/stage'
        env:
          SERVICE_NAME: "tntk-api" # This could be dynamically determined
          STAGE_TAG: ${{ github.sha }}
          STAGE_YAML_FILE: "environments/values-dev.yaml"
        run: |
          # Setting up Git for commit
          git config --global user.name 'TNTK'
          git config --global user.email 'actions@tntk.io'
          git add $STAGE_YAML_FILE
          git commit -m "Update $SERVICE_NAME image tag to $STAGE_TAG"
          git push